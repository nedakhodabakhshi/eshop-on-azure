

trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'eshop-subscription'      
  acrName: 'eshopacr123'
  acrLoginServer: 'eshopacr123'
  imageName: 'eshop-web'
  kubernetesNamespace: 'default'
  aksCluster: 'eshop-aks'
  resourceGroup: 'eshop-rg'

stages:

# ---------------- Build & Push ----------------
- stage: BuildAndPush
  displayName: 'Build and Push Image to ACR'
  jobs:
    - job: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        # ✅ Login to ACR
        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: 'login'
            containerRegistry: 'acr-eshop' 

        # ✅ Build and Push Image to ACR
        - task: Docker@2
          displayName: 'Build and Push to ACR'
          inputs:
            containerRegistry: 'acr-eshop'  
            repository: $(imageName)
            command: 'buildAndPush'
            Dockerfile: 'dockerfiles/web/Dockerfile'
            buildContext: .
            tags: |
              latest
# ------------------- Deploy to AKS -------------------
- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: BuildAndPush
  jobs:
    - job: DeployToK8s
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        # فقط برای اطمینان: لیست فایل‌های مانيفست
        - script: |
            echo "Listing manifests..."
            ls -la $(Build.SourcesDirectory)/deploy/k8s
          displayName: 'Debug: list k8s dir'

        # ✅ روش قطعی: kubectl apply از طریق Azure CLI
        - task: AzureCLI@2
          displayName: 'kubectl apply manifests'
          inputs:
            azureSubscription: $(azureSubscription)   # eshop-subscription
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              set -e
              az aks get-credentials -g $(resourceGroup) -n $(aksCluster) --overwrite-existing
              kubectl version --client
              # پوشه‌ی همه مانيفست‌ها را apply کن
              kubectl apply -f $(Build.SourcesDirectory)/deploy/k8s
              # اختیاری: منتظر rollout دیپلویمنت بمان
              kubectl rollout status deploy/eshop-web -n $(kubernetesNamespace) --timeout=120s
