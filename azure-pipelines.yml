
trigger:
  branches:
    include:
      - main

# ---------------- Variables ----------------
variables:
  # نام سرویس‌کانکشن Azure Resource Manager
  azureSubscription: 'eshop-subscription'
  # نام سرویس‌کانکشن ACR (نوع: Azure Container Registry)
  acrServiceConnection: 'acr-eshop'

  # نام ریپوی ایمیج در ACR
  imageName: 'eshop-web'
  # مسیر Dockerfile
  dockerfilePath: 'dockerfiles/web/Dockerfile'

  # AKS
  resourceGroup: 'eshop-rg'
  aksCluster: 'eshop-aks'
  kubernetesNamespace: 'default'

# --------------- Build & Push ---------------
stages:
- stage: BuildAndPush
  displayName: 'Build and Push Image to ACR'
  jobs:
    - job: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        # Login به ACR از طریق سرویس‌کانکشن
        - task: Docker@2
          displayName: 'Login to ACR'
          inputs:
            command: 'login'
            containerRegistry: '$(acrServiceConnection)'

        # Build & Push
        - task: Docker@2
          displayName: 'Build and Push to ACR'
          inputs:
            command: 'buildAndPush'
            containerRegistry: '$(acrServiceConnection)'
            repository: '$(imageName)'
            Dockerfile: '$(dockerfilePath)'
            buildContext: .
            tags: |
              latest
              $(Build.BuildId)

# ------------------ Deploy ------------------
- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: BuildAndPush
  jobs:
    - job: DeployToK8s
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: self

        # فقط برای دیباگ: ببینیم مانيفست‌ها روی ایجنت هست یا نه
        - script: |
            echo "Listing manifests..."
            ls -la $(Build.SourcesDirectory)/deploy/k8s
          displayName: 'Debug: list k8s dir'

        # دیپلوی با kubectl و هندل immutable بودن Service
        - task: AzureCLI@2
          displayName: 'kubectl apply manifests'
          inputs:
            azureSubscription: '$(azureSubscription)'
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              set -e
              az aks get-credentials -g "$(resourceGroup)" -n "$(aksCluster)" --overwrite-existing

              echo "Applying Deployment & Ingress..."
              kubectl apply -n "$(kubernetesNamespace)" -f "$(Build.SourcesDirectory)/deploy/k8s/web-deployment.yaml"
              kubectl apply -n "$(kubernetesNamespace)" -f "$(Build.SourcesDirectory)/deploy/k8s/ingress.yaml"

              echo "Applying Service (with immutable-safe fallback)..."
              set +e
              kubectl apply -n "$(kubernetesNamespace)" -f "$(Build.SourcesDirectory)/deploy/k8s/web-service.yaml"
              rc=$?
              set -e
              if [ $rc -ne 0 ]; then
                echo "Service patch failed (immutable). Recreating service..."
                kubectl delete -n "$(kubernetesNamespace)" -f "$(Build.SourcesDirectory)/deploy/k8s/web-service.yaml" --ignore-not-found
                kubectl apply  -n "$(kubernetesNamespace)" -f "$(Build.SourcesDirectory)/deploy/k8s/web-service.yaml"
              fi

              echo "Waiting for rollout..."
              kubectl rollout status deploy/eshop-web -n "$(kubernetesNamespace)" --timeout=180s || true

